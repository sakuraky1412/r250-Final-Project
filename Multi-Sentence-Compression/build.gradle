/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'stefano' at '23/01/17 15:46' with Gradle 3.2.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

description = "Distributional Semantics"

group = 'org.stefano'
version = '0.1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = "org.stefano.distributional.Main"

run { // Neo4j DB folder
    args "./build/compression.db/".split()
}

applicationDefaultJvmArgs = ["-Dgreeting.language=en", "-Xmx12G", "-XX:+UseG1GC", "-XX:+UseStringDeduplication", "-Xss32M"]

jar {
    archiveName = baseName + '.' + extension
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes 'Implementation-Title': rootProject.name, 'Implementation-Version': version, 'Main-Class': mainClassName
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// In this section you declare where to find the dependencies of your project
repositories {
    mavenLocal()
    mavenCentral()
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'org.neo4j:neo4j:3.1.1'
    // The production code uses the SLF4J logging API at compile time
    // compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'ch.qos.logback:logback-classic:1.1.9'
    compile 'org.apache.opennlp:opennlp-tools:1.7.1'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.6.2'
    // JAX-B dependencies for JDK 9+
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"
}
